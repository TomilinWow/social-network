{"version":3,"sources":["redux/auth-reducer.ts","App.module.css","components/Header/Header.module.css","components/Tools/Preloader.module.css","components/Tools/Preloader.jsx","redux/profile-reducer.ts","redux/dialogs-reducer.ts","tools/helpers.js","redux/users-reducer.ts","assets/images/user.png","api/api.js","components/Navbar/Navbar.jsx","redux/app-reducer.ts","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","reportWebVitals.js","redux/store.js","index.js","components/Navbar/Navbar.module.css"],"names":["SET_USER_DATA","initialState","id","email","login","isAuth","setAuthUserData","type","data","dispatch","a","usersAPI","response","resultCode","authlogin","password","rememberMe","authLogin","logout","authReducer","state","action","module","exports","Preloader","className","s","preloader","spinner","ADD_NEW_POST","SET_RELOADER","SET_PROFILE_DATA","SET_PROFILE_STATUS","posts","profile","isReloaded","status","newMessageBody","addNewPost","text","reloader","isFetching","setProfileStatus","getUsers","userId","profileAPI","getProfile","getStatus","setStatus","profileReducer","SEND_NEW_MESSAGE","messages","dialogs","name","sendNewMessageCreator","dialogsReducer","updateObjectInArray","items","itemId","objPropName","NewObj","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FOLLOWING_PROGRESS","users","pagesCount","totalUsersCount","currentPage","followingInProgress","followPress","unfollowPress","setUsers","setCurrentPage","pageId","setTotalUsersCount","count","toggleFollowingProgress","requestUsers","usersReducer","followed","filter","totalCount","followUnfollowFlow","apiMethod","followUnfollowPress","unfollow","bind","follow","instance","axios","withCredentials","baseURL","headers","get","then","post","delete","put","Navbar","nav","navLink","to","activeClassName","activeLink","INITIALIZED_SUCCESS","initialize","appReducer","Header","props","header","logo","src","alt","headerContent","log","placeholder","onClick","HeaderContainer","this","React","Component","connect","auth","DialogsContainer","lazy","ProfilesContainer","UsersContainer","Login","App","initializeApp","app","container","appContent","appWrapperContent","Suspense","fallback","path","render","compose","withRouter","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","profilePage","dialogsPage","usersPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById"],"mappings":"ySAEMA,EAAgB,gBAElBC,EAAe,CACfC,GAAI,KACJC,MAAO,KACPC,MAAO,KACPC,QAAQ,GAgCCC,EAAkB,SAACJ,EAAmBC,EAAsBC,EAAsBC,GAAhE,MAC1B,CAACE,KAAMP,EAAeQ,KAAM,CAACN,KAAIC,QAAOC,QAAOC,YAGvCD,EAAQ,WACjB,8CAAO,WAAOK,GAAP,uBAAAC,EAAA,sEACkBC,IAASP,QAD3B,OAE8B,KAD7BQ,EADD,QAEUJ,KAAKK,aAAmB,EACRD,EAASJ,KAAKA,KAAlCN,EAD2B,EAC3BA,GAAIC,EADuB,EACvBA,MAAOC,EADgB,EAChBA,MAChBK,EAASH,EAAgBJ,EAAIC,EAAOC,GAAO,KAJ5C,2CAAP,uDASSU,EAAY,SAACX,EAAeY,EAAkBC,GACvD,8CAAO,WAAOP,GAAP,SAAAC,EAAA,sEACkBC,IAASM,UAAUd,EAAOY,EAAUC,GADtD,OAE8B,IAF9B,OAEUR,KAAKK,YACdJ,EAASL,KAHV,2CAAP,uDAUSc,EAAS,WAClB,8CAAO,WAAOT,GAAP,SAAAC,EAAA,sEACkBC,IAASP,QAD3B,OAE8B,IAF9B,OAEUI,KAAKK,YACdJ,EAASH,EAAgB,KAAM,KAAM,MAAM,IAH5C,2CAAP,uDAQWa,IA9DK,WAAuD,IAAtDC,EAAqD,uDAA7CnB,EAAcoB,EAA+B,uCAEtE,OAAQA,EAAOd,MACX,KAAKP,EACD,OAAO,2BACAoB,GACAC,EAAOb,MAIlB,QACI,OAAOY,K,mBCtBnBE,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAa,wBAAwB,kBAAoB,+BAA+B,OAAS,oBAAoB,UAAY,yB,mBCA1KD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,uBAAuB,cAAgB,gC,mBCA9FD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,KAAO,0B,gCCDvG,oCAWeC,IARG,WACd,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SACH,qBAAKF,UAAWC,IAAEE,c,0NCHpBC,EAAe,eACfC,EAAe,eACfC,EAAmB,mBACnBC,EAAqB,qBAOvB/B,EAAe,CACfgC,MAAO,GACPC,QAAS,KACTC,YAAY,EACZC,OAAQ,GACRC,eAAgB,IAsCPC,EAAa,SAACC,GAAD,MACrB,CAAChC,KAAMsB,EAAcU,SAebC,EAAW,SAACC,GAAD,MACnB,CAAClC,KAAMuB,EAAcW,eAObC,EAAmB,SAACN,GAAD,MAC3B,CAAC7B,KAAMyB,EAAoBI,WAGnBO,EAAW,SAACC,GACrB,8CAAO,WAAOnC,GAAP,eAAAC,EAAA,6DAEHD,EAAS+B,GAAS,IAFf,SAGkBK,IAAWC,WAAWF,GAHxC,OAGChC,EAHD,OAIHH,GA1BuByB,EA0BCtB,EAASJ,KAzBpC,CAACD,KAAMwB,EAAkBG,aA0BtBzB,EAAS+B,GAAS,IALf,iCAtBmB,IAACN,IAsBpB,OAAP,uDAUSa,EAAY,SAACH,GACtB,8CAAO,WAAOnC,GAAP,eAAAC,EAAA,sEAEkBmC,IAAWE,UAAUH,GAFvC,OAEChC,EAFD,OAGHH,EAASiC,EAAiB9B,EAASJ,OAHhC,2CAAP,uDAOSwC,EAAY,SAACZ,GACtB,8CAAO,WAAO3B,GAAP,SAAAC,EAAA,sEAEkBmC,IAAWG,UAAUZ,GAFvC,OAG8B,IAH9B,OAGU5B,KAAKK,YACdJ,EAASiC,EAAiBN,IAJ3B,2CAAP,uDAWWa,IA3FQ,WAA0D,IAAzD7B,EAAwD,uDAAhDnB,EAAcoB,EAAkC,uCAC5E,OAAQA,EAAOd,MACX,KAAKsB,EACD,OAAO,2BACAT,GADP,IAEIa,MAAM,GAAD,mBAAMb,EAAMa,OAAZ,CAAmB,CAAC/B,GAAI,EAAGqC,KAAMlB,EAAOkB,UAErD,KAAKR,EACD,OAAO,2BACAX,GADP,IAEIc,QAASb,EAAOa,UAExB,KAAKJ,EACD,OAAO,2BACAV,GADP,IAEIe,WAAYd,EAAOoB,aAE3B,KAAKT,EACD,OAAO,2BACAZ,GADP,IAEIgB,OAAQf,EAAOe,SAEvB,QACI,OAAOhB,K,qFC9Cb8B,EAAmB,mBAYrBjD,EAAe,CACfkD,SAAU,CACN,CAACjD,GAAI,EAAGqC,KAAM,UAElBa,QAAS,CACL,CAAClD,GAAI,EAAGmD,KAAM,UA0BTC,EAAwB,SAACf,GAAD,MAChC,CAAChC,KAAM2C,EAAkBX,SAGfgB,IAvBQ,WAA2D,IAA1DnC,EAAyD,uDAAjDnB,EAAcoB,EAAmC,uCAE7E,OAAQA,EAAOd,MACX,KAAK2C,EACD,OAAO,2BACA9B,GADP,IAEI+B,SAAS,GAAD,mBAAM/B,EAAM+B,UAAZ,CAAsB,CAACjD,GAAI,EAAGqC,KAAMlB,EAAOkB,UAI3D,QACI,OAAOnB,K,kWCjCNoC,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC7D,OAAOH,EAAMI,KAAI,SAAAC,GACZ,OAAIA,EAAEH,KAAiBD,EACZ,2BAAII,GAAMF,GAEdE,MCHTC,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBrC,EAAe,eACfsC,EAA+B,+BAEjCnE,EAAe,CACfoE,MAAO,GACPC,WAAY,EACZC,gBAAiB,GACjBC,YAAa,EACbrC,YAAY,EACZsC,oBAAqB,IAgDZC,EAAc,SAAC9B,GAAD,MACtB,CAACrC,KAAMwD,EAAQnB,WAMP+B,EAAgB,SAAC/B,GAAD,MACxB,CAACrC,KAAMyD,EAAUpB,WAMTgC,EAAW,SAACP,GAAD,MACnB,CAAC9D,KAAM0D,EAAWI,UAMVQ,EAAiB,SAACC,GAAD,MACzB,CAACvE,KAAM2D,EAAkBY,WAMjBC,EAAqB,SAACC,GAAD,MAC7B,CAACzE,KAAM4D,EAAuBa,UAMtBxC,EAAW,SAACC,GAAD,MACnB,CAAClC,KAAMuB,EAAcW,eAObwC,EAA0B,SAACxC,EAAqBG,GAAtB,MAClC,CAACrC,KAAM6D,EAA8B3B,aAAYG,WAKzCsC,GAHEC,IAzFM,WAAwD,IAAvD/D,EAAsD,uDAA9CnB,EAAcoB,EAAgC,uCAExE,OAAQA,EAAOd,MACX,KAAKwD,EACD,OAAO,2BACA3C,GADP,IAEIiD,MAAOb,EAAoBpC,EAAMiD,MAAOhD,EAAOuB,OAAQ,KAAM,CAACwC,UAAU,MAGhF,KAAKpB,EACD,OAAO,2BACA5C,GADP,IAEIiD,MAAOb,EAAoBpC,EAAMiD,MAAOhD,EAAOuB,OAAQ,KAAM,CAACwC,UAAU,MAGhF,KAAKnB,EACD,OAAO,2BAAI7C,GAAX,IAAkBiD,MAAM,YAAKhD,EAAOgD,SAExC,KAAKH,EACD,OAAO,2BAAI9C,GAAX,IAAkBoD,YAAanD,EAAOyD,SAE1C,KAAKX,EACD,OAAO,2BAAI/C,GAAX,IAAkBmD,gBAAiBlD,EAAO2D,QAE9C,KAAKlD,EACD,OAAO,2BAAIV,GAAX,IAAkBe,WAAYd,EAAOoB,aAEzC,KAAK2B,EACD,OAAO,2BACAhD,GADP,IAEIqD,oBAAqBpD,EAAOoB,WAAP,sBACXrB,EAAMqD,qBADK,CACgBpD,EAAOuB,SACtCxB,EAAMqD,oBAAoBY,QAAO,SAAAnF,GAAE,OAAIA,GAAMmB,EAAOuB,YAGlE,QACI,OAAOxB,IAwDS,SAACoD,EAAqBF,GAC9C,8CAAO,WAAO7D,GAAP,eAAAC,EAAA,6DACHD,EAAS+B,GAAS,IADf,SAEc7B,IAASiE,SAASJ,EAAaF,GAF7C,OAEC9D,EAFD,OAGHC,EAAS+B,GAAS,IAClB/B,EAASmE,EAASpE,EAAKiD,QACvBhD,EAASsE,EAAmBvE,EAAK8E,aAL9B,2CAAP,wDAUEC,EAAkB,uCAAG,WAAO3C,EAAgBnC,EAAe+E,EAAgBC,GAAtD,SAAA/E,EAAA,6DACvBD,EAASwE,GAAwB,EAAMrC,IADhB,SAEF4C,EAAU5C,GAFR,OAGU,IAHV,OAGVpC,KAAKK,aACdJ,EAASgF,EAAoB7C,IAC7BnC,EAASwE,GAAwB,EAAOrC,KALrB,2CAAH,4DAQX8C,EAAW,SAAC9C,GACrB,8CAAO,WAAOnC,GAAP,SAAAC,EAAA,sDACH6E,EAAmB3C,EAAQnC,EAAUE,IAAS+E,SAASC,KAAKhF,KAAWgE,GADpE,2CAAP,uDAKSiB,EAAS,SAAChD,GACnB,8CAAO,WAAOnC,GAAP,SAAAC,EAAA,sDACH6E,EAAmB3C,EAAQnC,EAAUE,IAASiF,OAAOD,KAAKhF,KAAW+D,GADlE,2CAAP,wD,gCC7IW,QAA0B,kC,oDCAzC,gFAEMmB,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAKNtF,EAAW,CAEpBiE,SAFoB,SAEXJ,EAAaF,GAClB,OAAOuB,EAASK,IAAT,qBAA2B1B,EAA3B,kBAAgDF,IAAc6B,MACjE,SAAAvF,GACI,OAAOA,EAASJ,SAK5BoF,OAVoB,SAUbhD,GACH,OAAOiD,EAASO,KAAT,iBAAwBxD,KAEnC8C,SAboB,SAaX9C,GACL,OAAOiD,EAASQ,OAAT,iBAA0BzD,KAErCxC,MAhBoB,WAiBhB,OAAOyF,EAASK,IAAT,YAEXjF,UAnBoB,SAmBVd,EAAOY,EAAUC,GACvB,OAAO6E,EAASO,KAAT,aAA4B,CAACjG,QAAOY,WAAUC,gBAEzDE,OAtBoB,WAuBhB,OAAO2E,EAASO,KAAT,gBAIFvD,EAAa,CACtBC,WADsB,SACXF,GACP,OAAOiD,EAASK,IAAI,WAAatD,IAGrCG,UALsB,SAKZH,GACN,OAAOiD,EAASK,IAAI,mBAAqBtD,IAG7CI,UATsB,SASZZ,GACN,OAAOyD,EAASS,IAAT,mBAAiC,CAAClE,OAAQA,O,oKCnB1CmE,EA1BA,WACX,OACI,sBAAK9E,UAAWC,IAAE8E,IAAlB,UACI,qBAAK/E,UAAWC,IAAE+E,QAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBjF,IAAEkF,WAA1C,0BAEJ,qBAAKnF,UAAWC,IAAE+E,QAAlB,SACI,cAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBjF,IAAEkF,WAAvC,oBAEJ,qBAAKnF,UAAWC,IAAE+E,QAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBjF,IAAEkF,WAA1C,wBAEJ,qBAAKnF,UAAWC,IAAE+E,QAAlB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBjF,IAAEkF,WAAxC,qBAEJ,qBAAKnF,UAAWC,IAAE+E,QAAlB,SACI,cAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBjF,IAAEkF,WAA3C,wBAEJ,qBAAKnF,UAAWC,IAAE+E,QAAlB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBjF,IAAEkF,WAAxC,yB,sBCpBVC,EAAsB,sBAExB5G,EAAe,CACf6G,YAAY,GAoCDC,EAhCI,WAA0D,IAAzD3F,EAAwD,uDAAhDnB,EAAcoB,EAAkC,uCAExE,OAAQA,EAAOd,MACX,KAAKsG,EACD,OAAO,2BACAzF,GADP,IAEI0F,YAAY,IAGpB,QACI,OAAO1F,I,yCCIJ4F,EApBA,SAACC,GACZ,OAAO,sBAAKxF,UAAWC,IAAEwF,OAAlB,UACH,sBAAKzF,UAAWC,IAAEyF,KAAlB,UACI,qBAAKC,IAAI,4EAA4EC,IAAI,KACzF,gCACI,sCACA,uCACA,8CAGR,qBAAK5F,UAAWC,IAAE4F,cAAlB,SACKL,EAAM5G,OACD,gCACG4G,EAAMM,IADT,IACc,sBAAMC,YAAa,SAAUC,QAASR,EAAM/F,OAA5C,uBAEd,cAAC,IAAD,CAASwF,GAAG,SAAZ,yBCZZgB,E,4JAEF,WACI,OAAO,cAAC,EAAD,CAAQH,IAAKI,KAAKV,MAAMM,IAChBlH,OAAQsH,KAAKV,MAAM5G,OACnBa,OAAQyG,KAAKV,MAAM/F,a,GALZ0G,IAAMC,WAiBrBC,eARO,SAAC1G,GACnB,MAAO,CACHmG,IAAKnG,EAAM2G,KAAK3H,MAChBC,OAAQe,EAAM2G,KAAK1H,UAMvB,CACIC,oBACAY,YAHO4G,CAIRJ,GCfDM,EAAmBJ,IAAMK,MAAK,kBAAM,sDACpCC,EAAoBN,IAAMK,MAAK,kBAAM,sDACrCE,EAAiBP,IAAMK,MAAK,kBAAM,gCAClCG,EAAQR,IAAMK,MAAK,kBAAM,sDAEzBI,E,uKAEF,WACIV,KAAKV,MAAMqB,kB,oBAGf,WAII,OACI,sBAAK7G,UAAWC,IAAE6G,IAAlB,UACI,qBAAK9G,UAAWC,IAAEwF,OAAlB,SACI,qBAAKzF,UAAWC,IAAE8G,UAAlB,SACI,cAAC,EAAD,QAGR,qBAAK/G,UAAWC,IAAE8G,UAAlB,SACI,sBAAK/G,UAAWC,IAAE+G,WAAlB,UACI,cAAC,EAAD,IACA,qBAAKhH,UAAWC,IAAEgH,kBAAlB,SACI,eAAC,IAAMC,SAAP,CAAgBC,SAAU,cAACpH,EAAA,EAAD,IAA1B,UAEQ,cAAC,IAAD,CAAOqH,KAAK,WAAWC,OAAQ,kBAAM,cAACd,EAAD,OACrC,cAAC,IAAD,CAAOa,KAAK,oBACLC,OAAQ,kBAAM,cAACZ,EAAD,OACrB,cAAC,IAAD,CAAOW,KAAK,SACLC,OAAQ,kBAAM,cAACX,EAAD,OACrB,cAAC,IAAD,CAAOU,KAAK,SACLC,OAAQ,kBAAM,cAACV,EAAD,wB,GA7BvCP,aA8CHkB,cACXC,IACAlB,aANoB,SAAC1G,GAAD,MAAY,CAChC0F,WAAY1F,EAAMmH,IAAIzB,cAKG,CAACwB,cHjCD,kBAAM,SAAC7H,GAChC,IAAIwI,EAAUxI,EAASL,eAEvB8I,QAAQC,IAAI,CAACF,IAAU9C,MAAK,WACxB1F,EAPH,CAACF,KAAMsG,WGkCGkC,CAGbV,GCtDae,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnD,MAAK,YAAkD,IAA/CoD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gCCCVO,EAAWC,YAAgB,CAC3BC,YAAa7G,IACb8G,YAAaxG,IACbyG,UAAW7E,IACX4C,KAAM5G,IACNoH,IAAKxB,IAEHkD,EAAmBC,OAAOC,sCAAwCpB,IAGzDqB,EAFDC,YAAYT,EAAUK,EAAiBK,YAAgBC,OCLrEC,IAAS1B,OACL,cAAC,IAAD,CAAY2B,SAAUC,kBAAtB,SACI,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,QAIRO,SAASC,eAAe,SAG5BV,OAAOE,MAAQA,EAMfhB,K,kBC1BA9H,EAAOC,QAAU,CAAC,IAAM,oBAAoB,QAAU,wBAAwB,WAAa,8B","file":"static/js/main.684f94ee.chunk.js","sourcesContent":["import {usersAPI} from \"../api/api\"\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false\r\n};\r\n\r\nexport type authStateType = typeof initialState\r\nconst authReducer = (state = initialState, action: any): authStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport type DataType = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n}\r\n\r\nexport type setAuthUserDataType = {\r\n    type: typeof SET_USER_DATA,\r\n    data: DataType\r\n\r\n}\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean): setAuthUserDataType =>\r\n    ({type: SET_USER_DATA, data: {id, email, login, isAuth}})\r\n\r\n\r\nexport const login = () => {\r\n    return async (dispatch: any) => {\r\n        let response = await usersAPI.login()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    }\r\n\r\n}\r\nexport const authlogin = (email: string, password: string, rememberMe: boolean) => {\r\n    return async (dispatch: any) => {\r\n        let response = await usersAPI.authLogin(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(login())\r\n        } else {\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return async (dispatch: any) => {\r\n        let response = await usersAPI.login()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n\r\n    }\r\n}\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__adpCL\",\"appContent\":\"App_appContent__Fjs1C\",\"appWrapperContent\":\"App_appWrapperContent__3613b\",\"header\":\"App_header__2n54L\",\"container\":\"App_container__37rHK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo___xAka\",\"header\":\"Header_header__14aMl\",\"headerContent\":\"Header_headerContent__3SRC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3ttmA\",\"spinner\":\"Preloader_spinner__3Wd7k\",\"spin\":\"Preloader_spin__8Ugqq\"};","import s from './Preloader.module.css'\r\nimport image from '../../assets/images/user.png'\r\n\r\nconst Preloader = () => {\r\n    return <div className={s.preloader}>\r\n        <div className={s.spinner}>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_NEW_POST = 'ADD_NEW_POST'\r\nconst SET_RELOADER = 'SET_RELOADER'\r\nconst SET_PROFILE_DATA = 'SET_PROFILE_DATA'\r\nconst SET_PROFILE_STATUS = 'SET_PROFILE_STATUS'\r\n\r\ntype PostsType = {\r\n    id: number,\r\n    text: string\r\n}\r\n\r\nlet initialState = {\r\n    posts: [] as Array<PostsType>,\r\n    profile: null as any,\r\n    isReloaded: false,\r\n    status: '',\r\n    newMessageBody: ''\r\n\r\n};\r\n\r\ntype ProfileStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): ProfileStateType => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 2, text: action.text} as PostsType]\r\n            }\r\n        case SET_PROFILE_DATA:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_RELOADER:\r\n            return {\r\n                ...state,\r\n                isReloaded: action.isFetching\r\n            }\r\n        case SET_PROFILE_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype addNewPostType = {\r\n    type: typeof ADD_NEW_POST,\r\n    text: string\r\n}\r\n\r\nexport const addNewPost = (text: string): addNewPostType =>\r\n    ({type: ADD_NEW_POST, text})\r\n\r\ntype setProfileDataType = {\r\n    type: typeof SET_PROFILE_DATA,\r\n    profile: any\r\n}\r\nexport const setProfileData = (profile: any): setProfileDataType =>\r\n    ({type: SET_PROFILE_DATA, profile})\r\n\r\ntype reloaderType = {\r\n    type: typeof SET_RELOADER,\r\n    isFetching: boolean\r\n}\r\n\r\n\r\nexport const reloader = (isFetching: boolean): reloaderType =>\r\n    ({type: SET_RELOADER, isFetching})\r\n\r\ntype setProfileStatusType = {\r\n    type: typeof SET_PROFILE_STATUS,\r\n    status: string\r\n}\r\n\r\nexport const setProfileStatus = (status: string): setProfileStatusType =>\r\n    ({type: SET_PROFILE_STATUS, status})\r\n\r\n\r\nexport const getUsers = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n\r\n        dispatch(reloader(true))\r\n        let response = await profileAPI.getProfile(userId)\r\n        dispatch(setProfileData(response.data))\r\n        dispatch(reloader(false))\r\n    }\r\n\r\n}\r\n\r\nexport const getStatus = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setProfileStatus(response.data))\r\n    }\r\n}\r\n\r\nexport const setStatus = (status: string) => {\r\n    return async (dispatch: any) => {\r\n\r\n        let response = await profileAPI.setStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setProfileStatus(status))\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","const SEND_NEW_MESSAGE = 'SEND_NEW_MESSAGE'\r\n\r\ntype MessageType = {\r\n    id: number,\r\n    text: string\r\n}\r\n\r\ntype DialogType = {\r\n    id: number,\r\n    name: string\r\n}\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, text: 'Hello'},\r\n    ] as Array<MessageType>,\r\n    dialogs: [\r\n        {id: 1, name: 'Egor'},\r\n\r\n    ] as Array<DialogType>,\r\n};\r\n\r\nexport type DialogsStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any) : DialogsStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_NEW_MESSAGE: {\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, text: action.text}]\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SendNewMessageCreatorType = {\r\n    type: typeof SEND_NEW_MESSAGE,\r\n    text: string\r\n}\r\nexport const sendNewMessageCreator = (text: string) : SendNewMessageCreatorType =>\r\n    ({type: SEND_NEW_MESSAGE, text})\r\n\r\n\r\nexport default dialogsReducer;","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, NewObj) => {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...NewObj}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {UserType} from \"../types/types\";\r\nimport {updateObjectInArray} from \"../tools/helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst SET_RELOADER = 'SET_RELOADER'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pagesCount: 5,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isReloaded: false,\r\n    followingInProgress: [] as Array<number>\r\n};\r\n\r\nexport type UsersStateType = typeof initialState\r\n\r\nconst usersReducer = (state = initialState, action: any): UsersStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.pageId}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case SET_RELOADER: {\r\n            return {...state, isReloaded: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\ntype FollowPressType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport const followPress = (userId: number): FollowPressType =>\r\n    ({type: FOLLOW, userId})\r\n\r\ntype UnfollowPressType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport const unfollowPress = (userId: number): UnfollowPressType =>\r\n    ({type: UNFOLLOW, userId})\r\n\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\nexport const setUsers = (users: Array<UserType>): SetUsersType =>\r\n    ({type: SET_USERS, users})\r\n\r\ntype SetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    pageId: number\r\n}\r\nexport const setCurrentPage = (pageId: number): SetCurrentPageType =>\r\n    ({type: SET_CURRENT_PAGE, pageId})\r\n\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\nexport const setTotalUsersCount = (count: number): SetTotalUsersCountType =>\r\n    ({type: SET_TOTAL_USERS_COUNT, count})\r\n\r\ntype ReloaderType = {\r\n    type: typeof SET_RELOADER\r\n    isFetching: boolean\r\n}\r\nexport const reloader = (isFetching: boolean): ReloaderType =>\r\n    ({type: SET_RELOADER, isFetching})\r\n\r\ntype toggleFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): toggleFollowingProgressType =>\r\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport default usersReducer;\r\n\r\n\r\nexport const requestUsers = (currentPage: number, pagesCount: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(reloader(true))\r\n        let data = await usersAPI.setUsers(currentPage, pagesCount)\r\n        dispatch(reloader(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (userId: number, dispatch: any, apiMethod: any, followUnfollowPress: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(followUnfollowPress(userId))\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unfollowPress)\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followPress)\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/user.077086a0.png\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '4cdeaa98-5bdc-42c2-bbbf-5b75717f063b'\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n\r\n    setUsers(currentPage, pagesCount) {\r\n        return instance.get(`users?page=${currentPage}&count=${pagesCount}`).then(\r\n            response => {\r\n                return response.data\r\n            }\r\n        )\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    login() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    authLogin(email, password, rememberMe) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout(){\r\n        return instance.post(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`/profile/status/` + userId)\r\n    },\r\n\r\n    setStatus(status) {\r\n        return instance.put(`/profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    login(data){\r\n        return instance.post(`auth/login`, {\r\n            email: data.email,\r\n            password: data.password,\r\n            rememberMe: data.rememberMe,\r\n            captcha: true\r\n        })\r\n    }\r\n}","import s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div className={s.navLink}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>My profile</NavLink>\r\n            </div>\r\n            <div className={s.navLink}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.navLink}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.navLink}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.navLink}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.navLink}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar;","import {login} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\"\r\n\r\nlet initialState = {\r\n    initialize: false,\r\n};\r\n\r\nexport type AppInitialState = typeof initialState\r\nconst appReducer = (state = initialState, action: any) : AppInitialState => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialize: true\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype InitializesSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializesSuccess = () : InitializesSuccessType =>\r\n    ({type: INITIALIZED_SUCCESS})\r\n\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(login())\r\n    debugger\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializesSuccess())\r\n    })\r\n\r\n}\r\n\r\nexport default appReducer;","import s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <div className={s.header}>\r\n        <div className={s.logo}>\r\n            <img src=\"https://cdn.freelogovectors.net/wp-content/uploads/2018/12/react_logo.png\" alt=\"\"/>\r\n            <div>\r\n                <p>React</p>\r\n                <p>Social</p>\r\n                <p>Network</p>\r\n            </div>\r\n        </div>\r\n        <div className={s.headerContent}>\r\n            {props.isAuth\r\n                ? <div>\r\n                    {props.log} <span placeholder={'LogOut'} onClick={props.logout}>Logout</span>\r\n                </div>\r\n                : <NavLink to='/login'>login</NavLink>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Header","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {logout, setAuthUserData} from \"../../redux/auth-reducer\";\r\nimport Header from \"./Header\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header log={this.props.log}\r\n                       isAuth={this.props.isAuth}\r\n                       logout={this.props.logout}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        log: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        setAuthUserData,\r\n        logout\r\n    })(HeaderContainer);\r\n","import s from \"./App.module.css\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport {Component} from \"react\";\r\nimport React from 'react'\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"./components/Tools/Preloader\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfilesContainer = React.lazy(() => import('./components/Profile/ProfilesContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        // if (!this.props.initialize){\r\n        //     return <Preloader />\r\n        // }\r\n        return (\r\n            <div className={s.app}>\r\n                <div className={s.header}>\r\n                    <div className={s.container}>\r\n                        <HeaderContainer/>\r\n                    </div>\r\n                </div>\r\n                <div className={s.container}>\r\n                    <div className={s.appContent}>\r\n                        <Navbar/>\r\n                        <div className={s.appWrapperContent}>\r\n                            <React.Suspense fallback={<Preloader/>}>\r\n\r\n                                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                                    <Route path='/profile/:userId?'\r\n                                           render={() => <ProfilesContainer/>}/>\r\n                                    <Route path='/users'\r\n                                           render={() => <UsersContainer/>}/>\r\n                                    <Route path='/login'\r\n                                           render={() => <Login/>}/>\r\n\r\n\r\n                            </React.Suspense>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    initialize: state.app.initialize\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\n\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n\n    </HashRouter>,\n    document.getElementById('root')\n);\n\nwindow.store = store\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3-u5N\",\"navLink\":\"Navbar_navLink__1d9_A\",\"activeLink\":\"Navbar_activeLink__2btaG\"};"],"sourceRoot":""}